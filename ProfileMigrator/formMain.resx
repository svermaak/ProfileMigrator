<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAMAAADDpiTIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAALQUExURUJ4tFaHvG+Yxoapz5662LTJ4cLU59He7d/o8uzx9/H1+fb5/Pv8/f7///v8/vf5/PL2
        +u3y+OHp89Tg7sjX6bjM46O92o2u0nieyV+Mv0V6tUR5tWaSwo+v0rHH4NPf7fT3+////8DS5py42HSc
        yE6AuGuVxJ+62cva6vX4++Hq87HI4ICkzFCCuk2AuIaoz73Q5djj75252GGPwEt+t4OnzsTV5/r7/eTr
        9KG82lyLvmiTw7PJ4dPg7oyt0Ul9t0d8tomq0Nvl8anC3VuKvk6BuZu41/39/mOQwWWRwv7+/rrO5FmI
        vYSnzurw9qfA3GeSwn6jzKjB3cfX6VaGvHKbx+Xt9YWozqrC3fn7/env9s3b68LT57TK4bfM4rvO5L/S
        5snY6fD0+cHT5mGOwNzm8erw98jY6abA3G2WxVWGu0N5tFmJvXKax46u0sra6u/z+efu9mqUw/j6/N7n
        8q3E3oGlzYClza/G393n8ZOy1MbW6MXW6LfL4ous0dDd7NLf7VKDul2Lv+7z+KW/21+Nv6zE3ubt9W2X
        xeDp80h8tpq313eeydbi79bh716Mv0h9tpe11oOmzlSFu4Kmza7F39nj8Pz9/qS+236jy4qs0H+kzFiI
        vc3c61CCuZGw05m21mSRwXObx6K92kx/uKvD3Yepz0Z7tb7R5Zi21k+BucPU56vD3myWxOjv9kt/t+vx
        9+Pr9MrZ6qC72ZKx1Iiq0HifyUp+t5Sy1KjB3M/d7FOEu7/R5eLq9M7c7HadybzP5HGaxpW01XCZxlGD
        utrl8GeTw5Cw08zb62SQwVOEuleHvPP3+rDG35i11mKPwXWcyOfu9cXV6GCNwKO+21yKvomr0O/0+Xug
        ynmfytfi71qJvdDe7LbL4uTs9H2iy7LI4Huhy4+v02mUw3yhy3qgyrnN47XK4pa01W6YxZWz1XWdyJKx
        02qVxNnk8NXh7gGc7UQAABozSURBVHhe7d35f1TV3QfwQW0kkAmJiEqCwoCoYQmLIBaRgILBKBKURVYF
        AUVQ1BCX4lJFBAMupQZEFFxQKFZFsOKG8hQKoiCPtC61tlrtU22fts+/8MzM/Zw795x7zl1mbsIMr8/7
        F7nfe2bONffMXc4aIyIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiIiIiImphbY47/oSfFJ3Ytrhd+5J4aYey8pM6ntzplFNP61yBBHSsquxy+hlduyVMStp273FmT6Sl
        Y0zlWWefU4Uz7SXeq3efvvgMHSuq+/VvhxMcRHzAwHPxSSp8gwafNwRnNoTzfzoUn6eCdsGwIBd+rQuH
        1+BLqECNGHkRTmZ2yi4ehW+iAjT6knKcyOzV9h+Db6MCU/3TrK/9kvh5l+IbqYDU9CjDCcxd3WWX41up
        UIy9AicvGkPGDcIXUyGo74gTF50rxuO7Ke/VXFmLsxapqybg+ym/TZyEMxa1ssnIgfLYiKvjOF/epky9
        aNr0/p1mzLzm2lkd284O9qHrRiMXyldz5uJcmc27/oZ+829cgA/AiIU33XzxoluQxOjW25Ce8tPkBpwp
        g8WNt3veydvcceddnheDkp8hJeWhikacJq2SJcPbIKGnCafe7dV2dM8IpKN80/dEnCON+LSRIXp6jL73
        PnxO4+f3IxXllwfOxxlyW/pg6DadZQ8Zew4tZztxPloxG+fH5eHhTUgTSvVKU1PS0i5IQvljlenxb/F4
        5YE/VjHnjpW9T35kUrv2pXWPPoagzuO/MHQjqjoOKShfjC/BuVEsXy2f/l8+0bxmCvaldcUOvZ7j9N97
        PfZTnhi8FmdGVrVSuvjf9uRFrne8tdhnsmwaEjqVrsJeyg/r9Od/+o3Yn/LAk8sRlmG32VOup8Ha27GL
        8sMq7XW6eB12J1Wun2aq30EKD08/g6QQH4kdlB9WaJ//ijZgdyzWdLP5DTFAAYhVni01L25EmPLDA7r3
        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
        G+suZW0fERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERFR
        K4vF/h+hUmP2s/090AAAAABJRU5ErkJggg==
</value>
  </data>
</root>